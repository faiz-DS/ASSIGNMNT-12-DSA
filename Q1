class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def delete_middle_node(head):
    if head is None or head.next is None:
        return None

    slow_pointer = head
    fast_pointer = head
    prev = None

    while fast_pointer and fast_pointer.next:
        fast_pointer = fast_pointer.next.next
        prev = slow_pointer
        slow_pointer = slow_pointer.next

    # Now, slow_pointer is pointing to the middle node
    # We can delete this node
    prev.next = slow_pointer.next

    return head

def print_linked_list(head):
    current = head
    while current:
        print(current.val, end=" ")
        current = current.next
    print()

# Test example 1
head1 = ListNode(1, ListNode(2, ListNode(3, ListNode(4, ListNode(5)))))
print("Example 1 Input:")
print_linked_list(head1)
head1 = delete_middle_node(head1)
print("Example 1 Output:")
print_linked_list(head1)

# Test example 2
head2 = ListNode(2, ListNode(4, ListNode(6, ListNode(7, ListNode(5, ListNode(1))))))

print("Example 2 Input:")
print_linked_list(head2)
head2 = delete_middle_node(head2)
print("Example 2 Output:")
print_linked_list(head2)
